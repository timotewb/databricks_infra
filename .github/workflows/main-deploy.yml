# .github/workflows/deploy-nonprod.yml
name: 1. Deploy Infrastructure

on:
    workflow_dispatch:
      inputs:
        component:
          description: 'Select component or full deploy'
          required: true
          default: 'all'
          type: choice
          options:
            - all
            - rbac
            - network
            - workspace
            - storage
        terraform_action:
          description: "Terraform action to perform"
          required: true
          default: "plan"
          type: choice
          options:
            - "plan"
            - "apply"
            - "destroy"
        allow_destructive:
          description: "Allow destructive changes (deletes/replaces)?"
          required: true
          default: "no"
          type: choice
          options:
            - "yes"
            - "no"

permissions:
  id-token: write
  contents: read

jobs:
  validate-branch:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Ensure running on 'main' or 'prod'
        if: github.ref_name != 'main' && github.ref_name != 'prod'
        run: |
          echo "❌ This workflow must be run from the 'main' or 'prod' branch."
          exit 1

  set-action:
    runs-on: ubuntu-latest
    needs: validate-branch
    outputs:
      allow_changes: ${{ steps.set.outputs.allow_changes }}
    steps:
      - id: set
        run: |
          if [ "${{ github.event.inputs.terraform_action }}" == "plan" ]; then
            echo "allow_changes=${{ github.event.inputs.allow_changes }}" >> $GITHUB_OUTPUT
          else
            echo "allow_changes=" >> $GITHUB_OUTPUT
          fi

  # Full-stack path
  rbac:
    if: ${{ github.event.inputs.component == 'all' }}
    needs: storage
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: rbac
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}

  network:
    if: ${{ github.event.inputs.component == 'all' }}
    needs: set-action
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: network
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}

  workspace:
    if: ${{ github.event.inputs.component == 'all' }}
    needs: network
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: workspace
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}
      
  storage:
    if: ${{ github.event.inputs.component == 'all' }}
    needs: workspace
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: storage
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}


  # Individual job paths
  only-rbac:
    if: ${{ github.event.inputs.component == 'rbac' }}
    needs: set-action
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: rbac
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}

  only-network:
    if: ${{ github.event.inputs.component == 'network' }}
    needs: set-action
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: network
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}

  only-workspace:
    if: ${{ github.event.inputs.component == 'workspace' }}
    needs: set-action
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: workspace
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}

  only-storage:
    if: ${{ github.event.inputs.component == 'storage' }}
    needs: set-action
    uses: ./.github/workflows/component-deploy.yml
    with:
      environment: ${{ github.ref_name == 'prod' && 'prod' || 'non-prod' }}
      component: storage
      terraform_action: ${{ github.event.inputs.terraform_action }}
      allow_destructive: ${{ inputs.allow_destructive }}      
